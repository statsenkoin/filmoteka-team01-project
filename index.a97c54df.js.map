{"mappings":"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","sources":["src/js/filmoteka.js","src/js/custom-pagination.js","src/js/genres-btn.js","src/js/locale-storage-helper.js"],"sourcesContent":["import {\n  fetchPopular,\n  fetchPopularDay,\n  fetchGenre,\n  fetchMoivesByGenre,\n  fetchQuery,\n} from './api-service';\nimport { updatePagination, getCurrentPage } from './custom-pagination';\nimport { markupTrending } from './markups';\nimport modalActions from './modal-servise';\nimport LoadSpinner from './spinner';\nimport { genresFilm, LocalStorage } from './local-storage';\nimport { items } from './genres-btn';\nimport modalActions from './modal-servise';\nexport const currentFilmsOnPage = new LocalStorage('currentFilmsList');\nconst loadSpinner = new LoadSpinner({\n  selector: '.loading',\n});\n\nexport const homeGallery = document.querySelector('.home-gallery');\nconst paginationRef = document.querySelector('.pagination');\nconst toggle = document.querySelector('#input-toggle');\nconst searchForm = document.querySelector('.search-form');\nconst errorMessage = document.querySelector('.error-text');\n\npaginationRef.addEventListener('click', onPaginationButtonClick);\ntoggle.addEventListener('change', onCheckBox);\nitems.addEventListener('click', onGanreClick);\nsearchForm.addEventListener('submit', onSearchForm);\n\nlet receivedFilmList;\nlet currentGenres;\nlet currentFilmsList;\nlet searchQuery = '';\nlet tempPage = 1;\nlet currentPage = 1;\nlet totalPages = 1;\nlet genreId;\nlet isTodayChecked = false;\nlet isGenreChoosen = false;\nlet isSearchChoosen = false;\nerrorMessage.style.opacity = '0';\n\ninitGallery();\n\nasync function initGallery() {\n  loadSpinner.show();\n  receivedFilmList = await fetchGenre();\n  currentGenres = receivedFilmList.genres;\n  genresFilm.setLocalStorage(currentGenres);\n  await updateGallery();\n  modalActions();\n  window.scrollTo(0, 0);\n  loadSpinner.hide();\n}\n\nasync function updateGallery() {\n  loadSpinner.show();\n  await chooseSearchQuery();\n  totalPages = isGenreChoosen ? 300 : receivedFilmList.total_pages;\n  currentFilmsList = receivedFilmList.results;\n  currentFilmsOnPage.setLocalStorage(currentFilmsList);\n  markupTrending(currentFilmsList, homeGallery);\n  updatePagination(currentPage, totalPages, paginationRef);\n  loadSpinner.hide();\n  window.scrollTo(0, 0);\n}\n\nasync function chooseSearchQuery() {\n  if (isSearchChoosen) {\n    const searchFilmList = await fetchQuery(searchQuery, currentPage);\n    if (!searchFilmList.results.length) {\n      currentPage = tempPage;\n      loadSpinner.hide();\n      warningMessage();\n      return;\n    }\n    receivedFilmList = searchFilmList;\n  } else if (isGenreChoosen) {\n    receivedFilmList = await fetchMoivesByGenre(genreId, currentPage);\n  } else {\n    receivedFilmList = isTodayChecked\n      ? await fetchPopularDay(currentPage)\n      : await fetchPopular(currentPage);\n  }\n}\n\nasync function onGanreClick(evt) {\n  evt.preventDefault();\n  isGenreChoosen = true;\n  isSearchChoosen = false;\n  genreId = evt.target.id;\n  currentPage = 1;\n  await updateGallery();\n}\n\nasync function onCheckBox(event) {\n  isTodayChecked = event.currentTarget.checked;\n  isGenreChoosen = false;\n  isSearchChoosen = false;\n  currentPage = 1;\n\n  await updateGallery();\n}\n\nasync function onSearchForm(evt) {\n  evt.preventDefault();\n  searchQuery = evt.target.elements.searchQuery.value.trim();\n  searchForm.reset();\n  if (!searchQuery) {\n    warningMessage();\n    return;\n  }\n  isSearchChoosen = true;\n  isGenreChoosen = false;\n  tempPage = currentPage;\n  currentPage = 1;\n  await updateGallery();\n}\nfunction warningMessage() {\n  errorMessage.style.opacity = '1';\n  timeoutRemoveErrorMessage();\n}\nfunction timeoutRemoveErrorMessage() {\n  setTimeout(() => {\n    errorMessage.style.opacity = '0';\n  }, 2000);\n}\n\nasync function onPaginationButtonClick(event) {\n  if (event.target.nodeName !== 'BUTTON') return;\n  loadSpinner.show();\n  const targetPage = getCurrentPage(event);\n  if (targetPage === currentPage) return;\n  currentPage = targetPage;\n  await updateGallery();\n  loadSpinner.hide();\n}\n","// https://jasonwatmore.com/post/2018/08/07/javascript-pure-pagination-logic-in-vanilla-js-typescript\n\nlet maxPages = 9; //maximum number of page navigation links to display\nlet output;\nlet currentPage = 1;\nlet totalPages;\nlet paginationElem;\n\nlet targetPage;\n\n/**\n * to export - marking up pagination line\n * @param {Number} page - the current active page\n * @param {Number} pages - the total number of pages\n * @param {DOM element} paginationRef - where to put pagination line\n */\nexport function updatePagination(page, pages, paginationRef) {\n  paginationElem = paginationRef;\n  currentPage = page;\n  totalPages = pages;\n  output = paginate(currentPage, totalPages);\n  markupPagination(output, paginationElem);\n}\n\n/**\n *\n * @param {event} event click on button element\n * @returns currentPage\n */\nexport function getCurrentPage(event) {\n  const targetPageText = event.target.textContent;\n\n  if (!isNaN(Number(targetPageText))) targetPage = Number(targetPageText);\n  if (targetPageText === '>') {\n    targetPage = currentPage === totalPages ? totalPages : currentPage + 1;\n  }\n  if (targetPageText === '<') {\n    targetPage = currentPage === 1 ? 1 : currentPage - 1;\n  }\n  if (targetPageText === ' ...') targetPage = currentPage - (maxPages - 4);\n  if (targetPageText === '... ') targetPage = currentPage + (maxPages - 4);\n  currentPage = targetPage;\n  return currentPage;\n}\n\n/**\n *\n * @param {Number} currentPage - the current active page\n * @param {Number} totalPages - the total number of pages\n * @returns {Array} of text content for buttons in pagination line\n */\nfunction paginate(currentPage, totalPages) {\n  const output = [];\n  let startPage;\n  let endPage;\n  const offsetPages = Math.floor(maxPages / 2);\n\n  if (currentPage < 1) {\n    currentPage = 1;\n  } else if (currentPage > totalPages) {\n    currentPage = totalPages;\n  }\n\n  if (totalPages <= maxPages) {\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    if (currentPage <= offsetPages) {\n      startPage = 1;\n      endPage = maxPages;\n    } else if (currentPage + offsetPages >= totalPages) {\n      startPage = totalPages - offsetPages * 2;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - offsetPages;\n      endPage = currentPage + offsetPages;\n    }\n  }\n  for (let i = startPage; i <= endPage; i += 1) {\n    output.push(i);\n  }\n\n  if (maxPages >= 9) {\n    output.splice(0, 1, 1);\n    output.splice(output.length - 1, 1, totalPages);\n    if (currentPage - 1 > offsetPages && totalPages > maxPages) {\n      output.splice(1, 1, ' ...');\n    }\n    if (currentPage + 1 + offsetPages < totalPages && totalPages > maxPages)\n      output.splice(output.length - 2, 1, '... ');\n  }\n  return output;\n}\n\n/**\n * marking up pagination line\n * @param {Array} output - text content for buttons in pagination line output\n * @param {DOM element} paginationElem - where to put pagination line\n */\nfunction markupPagination(output, paginationElem) {\n  let markup = output.reduce((acc, item) => {\n    const pagiClass =\n      item === currentPage\n        ? 'class=\"pagination-button pagination-button-current\"'\n        : 'class=\"pagination-button\"';\n    return (acc += `<button type=\"button\" ${pagiClass}>${item}</button>`);\n  }, ``);\n  if (totalPages > maxPages) {\n    if (currentPage !== 1) {\n      markup =\n        `<button type=\"button\" class=\"pagination-button\">&lt;</button>` +\n        markup;\n    }\n    if (currentPage !== totalPages) {\n      markup += `<button type=\"button\" class=\"pagination-button\">&gt;</button>`;\n    }\n  }\n\n  paginationElem.innerHTML = '';\n  paginationElem.insertAdjacentHTML('beforeend', markup);\n}\n\nwindow.addEventListener('resize', () => {\n  const isMatch = window.matchMedia('(min-width: 768px)').matches;\n  maxPages = isMatch ? 9 : 5;\n  updatePagination(currentPage, totalPages, paginationElem);\n});\n","import { dataGenres } from './test';\n\nconst dropdown = document.querySelector('.dropdown');\nconst items = document.querySelector('.items');\n\nexport { items };\n\ndropdown.addEventListener('click', onButtonClick);\nfunction btnGenres() {\n  dataGenres.genres.unshift({ id: 'all', name: 'ALL' });\n  const liArr = dataGenres.genres\n    .map(\n      (element, index) =>\n        `<a href=\"#\" style=\"--i:${index + 1}\" id=\"${element.id}\">\n           <span></span>${element.name}\n         </a>`\n    )\n    .join('');\n\n  items.insertAdjacentHTML('beforeend', liArr);\n}\n\nbtnGenres();\n\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n  dropdown.classList.toggle('active');\n}\n","import { currentFilmsOnPage } from './filmoteka';\nimport { watchedFilms, queueFilms } from './local-storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { homeGallery } from './filmoteka';\nimport { getGenreByIdList, createMarkupModalWindow } from './markups';\n\nconst options = {\n  width: '280px',\n  borderRadius: '30px',\n  position: 'center-bottom',\n  distance: '25px',\n  fontSize: '18px',\n  timeout: 2000,\n};\n\nhomeGallery.addEventListener('click', onCardClick);\nconst filmModalRef = document.querySelector('.js-filmInfoModal');\nfilmModalRef.addEventListener('click', updateDataBase);\n\nlet isInWatched = false;\nlet isInQueue = false;\n\nlet filmsInWatched;\nlet filmsInQueue;\n\nlet filmCollection;\nlet currentFilm;\nlet idFilm;\n\ninitLocaleStorage();\nfunction initLocaleStorage() {\n  if (!watchedFilms.getLocalStorage()) {\n    watchedFilms.setLocalStorage();\n  }\n  if (!queueFilms.getLocalStorage()) {\n    queueFilms.setLocalStorage();\n  }\n}\n\nexport function updateDataBase(event) {\n  const element = event.target;\n  currentFilm = filmCollection.filter(film => film.id == idFilm);\n\n  if (\n    element.classList.contains('js-add-to-watched') ||\n    element.classList.contains('js-add-to-queue')\n  ) {\n    if (element.classList.contains('js-add-to-watched')) {\n      if (isInWatched) {\n        watchedFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to watched';\n        Notify.success('The movie is deleted from to my library', options);\n        isInWatched = false;\n      } else {\n        watchedFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from watched';\n        Notify.success('The movie has been added to my library', options);\n        isInWatched = true;\n      }\n    } else if (element.classList.contains('js-add-to-queue')) {\n      if (isInQueue) {\n        queueFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to queue';\n        Notify.success('The movie is deleted from queue', options);\n        isInQueue = false;\n      } else {\n        queueFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from queue';\n        Notify.success('The movie has been added to queue', options);\n        isInQueue = true;\n      }\n    }\n  }\n}\n\n/**\n * Checks if library (watched or queue) includes choosen film\n */\nfunction checkIfInLibrary() {\n  filmsInWatched = watchedFilms.getLocalStorage();\n  isInWatched = filmsInWatched.length\n    ? filmsInWatched.find(item => item.id == idFilm)\n    : false;\n\n  filmsInQueue = queueFilms.getLocalStorage();\n  isInQueue = filmsInQueue.length\n    ? filmsInQueue.find(item => item.id == idFilm)\n    : false;\n}\n\n/**\n * Prepares data and calls to markup modal window\n * @param {DOM Element} onClick event\n * @returns nothing\n */\nfunction onCardClick(event) {\n  const filmBox = event.target.closest('.movies-images__item');\n  if (!filmBox) return;\n  idFilm = Number(filmBox.dataset.id);\n\n  filmCollection = currentFilmsOnPage.getLocalStorage();\n  const data = filmCollection.find(film => film.id === idFilm);\n  const filmGenres = getGenreByIdList(data.genre_ids);\n\n  checkIfInLibrary();\n  createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n}\n"],"names":["$9e52eebca3574f80$var$totalPages","$9e52eebca3574f80$var$paginationElem","$9e52eebca3574f80$var$targetPage","$bpxeT","parcelRequire","$9e52eebca3574f80$var$maxPages","$9e52eebca3574f80$var$currentPage","$9e52eebca3574f80$export$909ec5aabce1b1f7","page","pages","paginationRef","output2","paginationElem1","markup","reduce","acc","item","concat","innerHTML","insertAdjacentHTML","$9e52eebca3574f80$var$markupPagination","currentPage1","totalPages1","startPage","endPage","output1","offsetPages","Math","floor","i","push","splice","length","$9e52eebca3574f80$var$paginate","$9e52eebca3574f80$export$7945ba8eb1c827e6","event","targetPageText","target","textContent","isNaN","Number","window","addEventListener","isMatch","matchMedia","matches","$8FeKp","$bee214a113ebdbaf$var$dropdown","document","querySelector","$bee214a113ebdbaf$export$17a1664ed1fb5d6f","evt","preventDefault","classList","toggle","dataGenres","genres","unshift","id","name","liArr","map","element","index","join","$bee214a113ebdbaf$var$btnGenres","$0d1473df3547cfcd$var$receivedFilmList","$0d1473df3547cfcd$var$currentGenres","$0d1473df3547cfcd$var$currentFilmsList","$0d1473df3547cfcd$export$4bf8523ab657c1fa","$4LMMA","LocalStorage","$0d1473df3547cfcd$var$loadSpinner","$j1lrD","default","selector","$0d1473df3547cfcd$export$61d936692c3f4b2e","$0d1473df3547cfcd$var$paginationRef","$0d1473df3547cfcd$var$toggle","$0d1473df3547cfcd$var$searchForm","$0d1473df3547cfcd$var$errorMessage","$0d1473df3547cfcd$var$_onPaginationButtonClick","apply","this","arguments","$0d1473df3547cfcd$var$_onCheckBox","$0d1473df3547cfcd$var$_onGanreClick","$0d1473df3547cfcd$var$_onSearchForm","$0d1473df3547cfcd$var$genreId","$0d1473df3547cfcd$var$searchQuery","$0d1473df3547cfcd$var$tempPage","$0d1473df3547cfcd$var$currentPage","$0d1473df3547cfcd$var$totalPages","$0d1473df3547cfcd$var$isTodayChecked","$0d1473df3547cfcd$var$isGenreChoosen","$0d1473df3547cfcd$var$isSearchChoosen","$0d1473df3547cfcd$var$_initGallery","$parcel$interopDefault","$2TvXO","mark","_callee","show","$1h2Gi","fetchGenre","_ctx","sent","genresFilm","setLocalStorage","$0d1473df3547cfcd$var$updateGallery","$kf3wk","scrollTo","hide","$0d1473df3547cfcd$var$_updateGallery","$0d1473df3547cfcd$var$chooseSearchQuery","total_pages","results","$LW3sO","markupTrending","$0d1473df3547cfcd$var$_chooseSearchQuery","searchFilmList","fetchQuery","$0d1473df3547cfcd$var$warningMessage","fetchMoivesByGenre","fetchPopularDay","fetchPopular","t0","currentTarget","checked","elements","searchQuery","value","trim","reset","style","opacity","setTimeout","targetPage","nodeName","$0d1473df3547cfcd$var$initGallery","$8nrFW","$c583d2193f059fcd$var$options","width","borderRadius","position","distance","fontSize","timeout","filmBox","closest","$c583d2193f059fcd$var$idFilm","dataset","data","$c583d2193f059fcd$var$filmCollection","getLocalStorage","find","film","filmGenres","getGenreByIdList","genre_ids","$c583d2193f059fcd$var$filmsInWatched","watchedFilms","$c583d2193f059fcd$var$isInWatched","$c583d2193f059fcd$var$filmsInQueue","queueFilms","$c583d2193f059fcd$var$isInQueue","createMarkupModalWindow","$c583d2193f059fcd$var$currentFilm","filter","contains","_watchedFilms","deleteFilmFromStorage","$h6c0i","Notify","success","addFilmtoStorage","_queueFilms","$c583d2193f059fcd$var$initLocaleStorage"],"version":3,"file":"index.a97c54df.js.map"}