{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,iECAAC,EAAAD,EAAA,SAIA,MAAME,EAAWC,SAASC,cAAc,aAClCC,EAAQF,SAASC,cAAc,UAMrCF,EAASI,iBAAiB,SAiB1B,SAAuBC,GACrBA,EAAIC,iBACJN,EAASO,UAAUC,OAAO,S,IAlB5B,WACE,MAAMC,EAAQV,EAAAW,WAAWC,OACtBC,KACC,CAACC,EAASC,IACR,0BAA0BA,EAAQ,UAAUD,EAAQE,iCAClCF,EAAQG,wBAG7BC,KAAK,IAERd,EAAMe,mBAAmB,YAAaT,E,CAIxCU,IDRA,E,WAAAC,WAEO,MAAMC,EAAqB,IAAI,EAAAC,EAAAC,cAAa,oBAC7CC,EAAc,IAAI,EAAAC,EAAAL,SAAY,CAClCM,SAAU,aAGCC,EAAc1B,SAASC,cAAc,iBAC5C0B,EAAgB3B,SAASC,cAAc,eACvC2B,EAAS5B,SAASC,cAAc,iBAChC4B,EAAa7B,SAASC,cAAc,gBACpC6B,EAAe9B,SAASC,cAAc,eACpBD,SAASC,cAAc,aACtBD,SAASC,cAAc,cAQhD,IAAI8B,EACAC,EACAC,EAPJN,EAAcxB,iBAAiB,SA8I/B+B,eAAuCC,GACrC,GAA8B,WAA1BA,EAAMC,OAAOC,SAAuB,OACxCd,EAAYe,OACZ,MAAMC,GAAa,EAAAC,EAAAC,gBAAeN,GAClC,GAAII,IAAeG,EAAa,OAChCA,EAAcH,QACRI,IAENpB,EAAYqB,M,IArJdhB,EAAOzB,iBAAiB,UAkGxB+B,eAA0BC,GACxBU,EAAiBV,EAAMW,cAAcC,QACrCC,GAAiB,EACjBC,GAAkB,EAClBP,EAAc,QAURC,G,IA/GRzC,EAAMC,iBAAiB,SAuFvB+B,eAA4B9B,GAC1BA,EAAIC,iBACJ2C,GAAiB,EACjBC,GAAkB,EAClBC,EAAU9C,EAAIgC,OAAOtB,GACrB4B,EAAc,QACRC,G,IA5FRd,EAAW1B,iBAAiB,UAkH5B+B,eAA4B9B,GAI1B,GAHAA,EAAIC,iBACJ8C,EAAc/C,EAAIgC,OAAOgB,SAASC,YAAYC,MAAMC,OACpD1B,EAAW2B,SACNL,EAEH,YADAM,IAGFR,GAAkB,EAClBD,GAAiB,EACjBU,EAAWhB,EACXA,EAAc,QACRC,G,IAzHR,IAIIO,EAJAC,EAAc,GACdO,EAAW,EACXhB,EAAc,EACdiB,EAAa,EAEbd,GAAiB,EACjBG,GAAiB,EACjBC,GAAkB,EAoBtBf,eAAeS,IACbpB,EAAYe,aAwBdJ,iBACE,GAAIe,EAAiB,CACnB,MAAMW,QAAuB,EAAAhE,EAAAiE,YAAWV,EAAaT,GACrD,IAAKkB,EAAeE,QAAQC,OAI1B,OAHArB,EAAcgB,EACdnC,EAAYqB,YACZa,IAGF1B,EAAmB6B,C,MAEnB7B,EADSiB,QACgB,EAAApD,EAAAoE,oBAAmBd,EAASR,GAElCG,QACT,EAAAjD,EAAAqE,iBAAgBvB,SAChB,EAAA9C,EAAAsE,cAAaxB,E,CAtCnByB,GAENR,EAAaX,EAAiB,IAAMjB,EAAiBqC,YAErDnC,EAAmBF,EAAiB+B,QAEpC1C,EAAmBiD,gBAAgBpC,IAWnC,EAAAqC,EAAAC,gBAAetC,EAAkBP,IACjC,EAAAc,EAAAgC,kBAAiB9B,EAAaiB,EAAYhC,GAC1CJ,EAAYqB,OACZ6B,OAAOC,SAAS,EAAG,E,CA0ErB,SAASjB,IACP3B,EAAa6C,MAAMC,QAAU,IAI7BC,YAAW,KACT/C,EAAa6C,MAAMC,QAAU,GAAG,GAC/B,I,CA1HL9C,EAAa6C,MAAMC,QAAU,IAU7B1C,iBACEX,EAAYe,OACZP,QAAyB,EAAAnC,EAAAkF,cACzB9C,EAAgBD,EAAiBrB,OACjCW,EAAA0D,WAAWV,gBAAgBrC,SACrBW,IACNpB,EAAYqB,M,CATdoC,GACAP,OAAOC,SAAS,EAAG,G,6GElDnB,MAAMO,EAAU,CACdC,MAAO,QACPC,aAAc,OACdC,SAAU,gBACVC,SAAU,OACVC,SAAU,OACVC,QAAS,KAIX7D,EAAYvB,iBAAiB,SAmF7B,SAAqBgC,GACnB,MAAMqD,EAAUrD,EAAMC,OAAOqD,QAAQ,wBACrC,IAAKD,EAAS,OACdE,EAASC,OAAOH,EAAQI,QAAQ9E,IAEhC+E,EAAiBzE,EAAmB0E,kBACpC,MAAMC,EAAOF,EAAeG,MAAKC,GAAQA,EAAKnF,KAAO4E,IAC/CQ,GAAa,EAAA5B,EAAA6B,kBAAiBJ,EAAKK,WAvBzCC,EAAiBhF,EAAAiF,aAAaR,kBAC9BS,IAAcF,EAAetC,QACzBsC,EAAeL,MAAKQ,GAAQA,EAAK1F,IAAM4E,IAG3Ce,EAAepF,EAAAqF,WAAWZ,kBAC1Ba,IAAYF,EAAa1C,QACrB0C,EAAaT,MAAKQ,GAAQA,EAAK1F,IAAM4E,KAmBzC,EAAApB,EAAAsC,yBAAwBb,EAAMG,EAAYK,EAAaI,E,IA5FpC3G,SAASC,cAAc,qBAC/BE,iBAAiB,SAyBvB,SAAwBgC,GAC7B,MAAMvB,EAAUuB,EAAMC,OACtByE,EAAchB,EAAeiB,QAAOb,GAAQA,EAAKnF,IAAM4E,KAGrD9E,EAAQN,UAAUyG,SAAS,sBAC3BnG,EAAQN,UAAUyG,SAAS,sBAEvBnG,EAAQN,UAAUyG,SAAS,qBACzBR,GACFlF,EAAAiF,aAAaU,sBAAsBH,EAAY,IAC/C1E,EAAMC,OAAO6E,YAAc,iBAC3BC,EAAAC,OAAOC,QAAQ,0CAA2CnC,GAC1DsB,GAAc,IAEdlF,EAAAiF,aAAae,oBAAoBR,GACjC1E,EAAMC,OAAO6E,YAAc,sBAC3BC,EAAAC,OAAOC,QAAQ,yCAA0CnC,GACzDsB,GAAc,GAEP3F,EAAQN,UAAUyG,SAAS,qBAChCJ,GACFtF,EAAAqF,WAAWM,sBAAsBH,EAAY,IAC7C1E,EAAMC,OAAO6E,YAAc,eAC3BC,EAAAC,OAAOC,QAAQ,kCAAmCnC,GAClD0B,GAAY,IAEZtF,EAAAqF,WAAWW,oBAAoBR,GAC/B1E,EAAMC,OAAO6E,YAAc,oBAC3BC,EAAAC,OAAOC,QAAQ,oCAAqCnC,GACpD0B,GAAY,I,IAnDpB,IAGIN,EACAI,EAEAZ,EACAgB,EACAnB,EARAa,GAAc,EACdI,GAAY,GAUhB,WACOtF,EAAAiF,aAAaR,mBAChBzE,EAAAiF,aAAajC,kBAEVhD,EAAAqF,WAAWZ,mBACdzE,EAAAqF,WAAWrC,iB,CANfiD,G","sources":["src/js/filmoteka.js","src/js/genres-btn.js","src/js/locale-storage-helper.js"],"sourcesContent":["import {\n  fetchPopular,\n  fetchPopularDay,\n  fetchGenre,\n  fetchMoivesByGenre,\n  fetchQuery,\n} from './api-service';\nimport { updatePagination, getCurrentPage } from './custom-pagination';\nimport {\n  markupTrending,\n  getGenreByIdList,\n  createMarkupModalWindow,\n} from './markups';\nimport modalActions from './modal-servise';\nimport LoadSpinner from './spinner';\nimport { genresFilm, LocalStorage } from './local-storage';\nimport { items } from './genres-btn';\nimport modalActions from './modal-servise';\nmodalActions();\n// export const popularFilms = new LocalStorage('currentFilmsList');\nexport const currentFilmsOnPage = new LocalStorage('currentFilmsList');\nconst loadSpinner = new LoadSpinner({\n  selector: '.loading',\n});\n\nexport const homeGallery = document.querySelector('.home-gallery');\nconst paginationRef = document.querySelector('.pagination');\nconst toggle = document.querySelector('#input-toggle');\nconst searchForm = document.querySelector('.search-form');\nconst errorMessage = document.querySelector('.error-text');\nconst weekFalseButton = document.querySelector('#week-btn');\nconst todayFalseButton = document.querySelector('#today-btn');\n\n// homeGallery.addEventListener('click', onCardClick);\npaginationRef.addEventListener('click', onPaginationButtonClick);\ntoggle.addEventListener('change', onCheckBox);\nitems.addEventListener('click', onGanreClick);\nsearchForm.addEventListener('submit', onSearchForm);\n\nlet receivedFilmList;\nlet currentGenres;\nlet currentFilmsList;\nlet searchQuery = '';\nlet tempPage = 1;\nlet currentPage = 1;\nlet totalPages = 1;\nlet genreId;\nlet isTodayChecked = false;\nlet isGenreChoosen = false;\nlet isSearchChoosen = false;\nerrorMessage.style.opacity = '0';\n\n// // ======================================================\n// const isInWatched = false;\n// const isInQueue = false;\n// //  =======================================================\n\ninitGallery();\nwindow.scrollTo(0, 0);\n\nasync function initGallery() {\n  loadSpinner.show();\n  receivedFilmList = await fetchGenre();\n  currentGenres = receivedFilmList.genres;\n  genresFilm.setLocalStorage(currentGenres);\n  await updateGallery();\n  loadSpinner.hide();\n}\n\nasync function updateGallery() {\n  loadSpinner.show();\n  await chooseSearchQuery();\n  // ======================================================\n  totalPages = isGenreChoosen ? 300 : receivedFilmList.total_pages;\n  // ======================================================\n  currentFilmsList = receivedFilmList.results;\n  // popularFilms.setLocalStorage(currentFilmsList);\n  currentFilmsOnPage.setLocalStorage(currentFilmsList);\n\n  // ======================================================\n\n  // const isInWatched = checkIfInLibrary('watched');\n  // const isInQueue = checkIfInLibrary('queue');\n\n  // markupTrending(currentFilmsList, homeGallery, isInWatched, isInQueue);\n\n  // ======================================================\n\n  markupTrending(currentFilmsList, homeGallery);\n  updatePagination(currentPage, totalPages, paginationRef);\n  loadSpinner.hide();\n  window.scrollTo(0, 0);\n}\n\nasync function chooseSearchQuery() {\n  if (isSearchChoosen) {\n    const searchFilmList = await fetchQuery(searchQuery, currentPage);\n    if (!searchFilmList.results.length) {\n      currentPage = tempPage;\n      loadSpinner.hide();\n      warningMessage();\n      return;\n    }\n    receivedFilmList = searchFilmList;\n  } else if (isGenreChoosen) {\n    receivedFilmList = await fetchMoivesByGenre(genreId, currentPage);\n  } else {\n    receivedFilmList = isTodayChecked\n      ? await fetchPopularDay(currentPage)\n      : await fetchPopular(currentPage);\n  }\n}\n\n// function onCardClick(event) {\n//   const filmBox = event.target.closest('.movies-images__item');\n//   if (!filmBox) return;\n//   const filmBoxId = Number(filmBox.dataset.id);\n//   const data = currentFilmsList.find(film => film.id === filmBoxId);\n//   const filmGenres = getGenreByIdList(data.genre_ids);\n//   createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n// }\n\n// ===== button genres ===============================\nasync function onGanreClick(evt) {\n  evt.preventDefault();\n  isGenreChoosen = true;\n  isSearchChoosen = false;\n  genreId = evt.target.id;\n  currentPage = 1;\n  await updateGallery();\n}\n\n// ===== checkBox week/today ========================\nasync function onCheckBox(event) {\n  isTodayChecked = event.currentTarget.checked;\n  isGenreChoosen = false;\n  isSearchChoosen = false;\n  currentPage = 1;\n\n  // if (isTodayChecked) {\n  //   todayFalseButton.classList.add('line-after');\n  //   weekFalseButton.classList.remove('line-after');\n  // } else {\n  //   todayFalseButton.classList.remove('line-after');\n  //   weekFalseButton.classList.add('line-after');\n  // }\n\n  await updateGallery();\n}\n\n// ===== search input =================================\nasync function onSearchForm(evt) {\n  evt.preventDefault();\n  searchQuery = evt.target.elements.searchQuery.value.trim();\n  searchForm.reset();\n  if (!searchQuery) {\n    warningMessage();\n    return;\n  }\n  isSearchChoosen = true;\n  isGenreChoosen = false;\n  tempPage = currentPage;\n  currentPage = 1;\n  await updateGallery();\n}\nfunction warningMessage() {\n  errorMessage.style.opacity = '1';\n  timeoutRemoveErrorMessage();\n}\nfunction timeoutRemoveErrorMessage() {\n  setTimeout(() => {\n    errorMessage.style.opacity = '0';\n  }, 2000);\n}\n\n// ===== pagination =====================================\nasync function onPaginationButtonClick(event) {\n  if (event.target.nodeName !== 'BUTTON') return;\n  loadSpinner.show();\n  const targetPage = getCurrentPage(event);\n  if (targetPage === currentPage) return;\n  currentPage = targetPage;\n  await updateGallery();\n  // window.scrollTo(0, 0);\n  loadSpinner.hide();\n}\n","import { dataGenres } from './test';\n// import { fetchMoivesByGenre } from './api-service';\n// import { markupTrending } from './markups';\n\nconst dropdown = document.querySelector('.dropdown');\nconst items = document.querySelector('.items');\n// const homeGallery = document.querySelector('.home-gallery');\n\n// =====================================\nexport { items };\n// =====================================\ndropdown.addEventListener('click', onButtonClick);\nfunction btnGenres() {\n  const liArr = dataGenres.genres\n    .map(\n      (element, index) =>\n        `<a href=\"#\" style=\"--i:${index + 1}\" id=\"${element.id}\">\n           <span></span>${element.name}\n         </a>`\n    )\n    .join('');\n\n  items.insertAdjacentHTML('beforeend', liArr);\n}\n\n// items.addEventListener('click', onGanreClick);\nbtnGenres();\n\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n  dropdown.classList.toggle('active');\n}\n\n// async function onGanreClick(evt) {\n//   evt.preventDefault();\n\n//   const arrMovies = await fetchMoivesByGenre(evt.target.id, 1);\n//   markupTrending(arrMovies.results, homeGallery);\n// }\n","// currentFilmsOnPage = class LocalStorage instance key currentFilmsList\nimport { currentFilmsOnPage } from './filmoteka';\nimport { watchedFilms, queueFilms } from './local-storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { homeGallery } from './filmoteka';\nimport { getGenreByIdList, createMarkupModalWindow } from './markups';\n\n//options for notiflix\nconst options = {\n  width: '280px',\n  borderRadius: '30px',\n  position: 'center-bottom',\n  distance: '25px',\n  fontSize: '18px',\n  timeout: 2000,\n};\n//  =======================================================\n\nhomeGallery.addEventListener('click', onCardClick);\nconst filmModalRef = document.querySelector('.js-filmInfoModal');\nfilmModalRef.addEventListener('click', updateDataBase);\n\n// ====================================================\n\nlet isInWatched = false;\nlet isInQueue = false;\n\nlet filmsInWatched;\nlet filmsInQueue;\n\nlet filmCollection;\nlet currentFilm;\nlet idFilm;\n\ninitLocaleStorage();\nfunction initLocaleStorage() {\n  if (!watchedFilms.getLocalStorage()) {\n    watchedFilms.setLocalStorage();\n  }\n  if (!queueFilms.getLocalStorage()) {\n    queueFilms.setLocalStorage();\n  }\n}\n\n// ======================================================\nexport function updateDataBase(event) {\n  const element = event.target;\n  currentFilm = filmCollection.filter(film => film.id == idFilm);\n\n  if (\n    element.classList.contains('js-add-to-watched') ||\n    element.classList.contains('js-add-to-queue')\n  ) {\n    if (element.classList.contains('js-add-to-watched')) {\n      if (isInWatched) {\n        watchedFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to watched';\n        Notify.success('The movie is deleted from to my library', options);\n        isInWatched = false;\n      } else {\n        watchedFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from watched';\n        Notify.success('The movie has been added to my library', options);\n        isInWatched = true;\n      }\n    } else if (element.classList.contains('js-add-to-queue')) {\n      if (isInQueue) {\n        queueFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to queue';\n        Notify.success('The movie is deleted from queue', options);\n        isInQueue = false;\n      } else {\n        queueFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from queue';\n        Notify.success('The movie has been added to queue', options);\n        isInQueue = true;\n      }\n    }\n  }\n}\n\n/**\n * Checks if library (watched or queue) includes choosen film\n */\nfunction checkIfInLibrary() {\n  filmsInWatched = watchedFilms.getLocalStorage();\n  isInWatched = filmsInWatched.length\n    ? filmsInWatched.find(item => item.id == idFilm)\n    : false;\n\n  filmsInQueue = queueFilms.getLocalStorage();\n  isInQueue = filmsInQueue.length\n    ? filmsInQueue.find(item => item.id == idFilm)\n    : false;\n}\n\n/**\n * Prepares data and calls to markup modal window\n * @param {DOM Element} onClick event\n * @returns nothing\n */\nfunction onCardClick(event) {\n  const filmBox = event.target.closest('.movies-images__item');\n  if (!filmBox) return;\n  idFilm = Number(filmBox.dataset.id);\n\n  filmCollection = currentFilmsOnPage.getLocalStorage();\n  const data = filmCollection.find(film => film.id === idFilm);\n  const filmGenres = getGenreByIdList(data.genre_ids);\n\n  checkIfInLibrary();\n  createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n}\n"],"names":["$7me8F","parcelRequire","$9AkgD","$e3f44edcaeb43caa$var$dropdown","document","querySelector","$e3f44edcaeb43caa$export$17a1664ed1fb5d6f","addEventListener","evt","preventDefault","classList","toggle","liArr","dataGenres","genres","map","element","index","id","name","join","insertAdjacentHTML","$e3f44edcaeb43caa$var$btnGenres","default","$c848cac843f338cf$export$4bf8523ab657c1fa","$b5rV1","LocalStorage","$c848cac843f338cf$var$loadSpinner","$04jNI","selector","$c848cac843f338cf$export$61d936692c3f4b2e","$c848cac843f338cf$var$paginationRef","$c848cac843f338cf$var$toggle","$c848cac843f338cf$var$searchForm","$c848cac843f338cf$var$errorMessage","$c848cac843f338cf$var$receivedFilmList","$c848cac843f338cf$var$currentGenres","$c848cac843f338cf$var$currentFilmsList","async","event","target","nodeName","show","targetPage","$fME8n","getCurrentPage","$c848cac843f338cf$var$currentPage","$c848cac843f338cf$var$updateGallery","hide","$c848cac843f338cf$var$isTodayChecked","currentTarget","checked","$c848cac843f338cf$var$isGenreChoosen","$c848cac843f338cf$var$isSearchChoosen","$c848cac843f338cf$var$genreId","$c848cac843f338cf$var$searchQuery","elements","searchQuery","value","trim","reset","$c848cac843f338cf$var$warningMessage","$c848cac843f338cf$var$tempPage","$c848cac843f338cf$var$totalPages","searchFilmList","fetchQuery","results","length","fetchMoivesByGenre","fetchPopularDay","fetchPopular","$c848cac843f338cf$var$chooseSearchQuery","total_pages","setLocalStorage","$fA0uA","markupTrending","updatePagination","window","scrollTo","style","opacity","setTimeout","fetchGenre","genresFilm","$c848cac843f338cf$var$initGallery","$1b0fce77a865df25$var$options","width","borderRadius","position","distance","fontSize","timeout","filmBox","closest","$1b0fce77a865df25$var$idFilm","Number","dataset","$1b0fce77a865df25$var$filmCollection","getLocalStorage","data","find","film","filmGenres","getGenreByIdList","genre_ids","$1b0fce77a865df25$var$filmsInWatched","watchedFilms","$1b0fce77a865df25$var$isInWatched","item","$1b0fce77a865df25$var$filmsInQueue","queueFilms","$1b0fce77a865df25$var$isInQueue","createMarkupModalWindow","$1b0fce77a865df25$var$currentFilm","filter","contains","deleteFilmFromStorage","textContent","$iQIUW","Notify","success","addFilmtoStorage","$1b0fce77a865df25$var$initLocaleStorage"],"version":3,"file":"index.4a822482.js.map"}