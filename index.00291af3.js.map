{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCEA,IACIC,EAEAC,EACAC,EAEAC,EANAC,EAAW,EAEXC,EAAc,EAYX,SAASC,EAAiBC,EAAMC,EAAOC,GAC5CP,EAAiBO,EACjBJ,EAAcE,EACdN,EAAaO,EACbR,EA+BF,SAAkBU,EAAaC,GAC7B,MAAMC,EAAS,GACf,IAAIC,EACAC,EACJ,MAAMC,EAAcC,KAAKC,MAAMb,EAAW,GAEtCM,EAAc,EAChBA,EAAc,EACLA,EAAcC,IACvBD,EAAcC,GAGZA,GAAcP,GAChBS,EAAY,EACZC,EAAUH,GAEND,GAAeK,GACjBF,EAAY,EACZC,EAAUV,GACDM,EAAcK,GAAeJ,GACtCE,EAAYF,EAA2B,EAAdI,EACzBD,EAAUH,IAEVE,EAAYH,EAAcK,EAC1BD,EAAUJ,EAAcK,GAG5B,IAAK,IAAIG,EAAIL,EAAWK,GAAKJ,EAASI,GAAK,EACzCN,EAAOO,KAAKD,GAGVd,GAAY,IACdQ,EAAOQ,OAAO,EAAG,EAAG,GACpBR,EAAOQ,OAAOR,EAAOS,OAAS,EAAG,EAAGV,GAChCD,EAAc,EAAIK,GAAeJ,EAAaP,GAChDQ,EAAOQ,OAAO,EAAG,EAAG,QAElBV,EAAc,EAAIK,EAAcJ,GAAcA,EAAaP,GAC7DQ,EAAOQ,OAAOR,EAAOS,OAAS,EAAG,EAAG,SAExC,OAAOT,C,CAvEEU,CAASjB,EAAaJ,GA+EjC,SAA0BsB,EAAQC,GAChC,IAAIC,EAASF,EAAOG,QAAO,CAACC,EAAKC,IAKvBD,EAAO,yBAHbC,IAASvB,EACL,sDACA,+BAC+CuB,cACpD,IACC3B,EAAaG,IACK,IAAhBC,IACFoB,EACE,gEACAA,GAEApB,IAAgBJ,IAClBwB,GAAU,kEAIdD,EAAeK,UAAY,GAC3BL,EAAeM,mBAAmB,YAAaL,E,CAlG/CM,CAAiB/B,EAAQE,E,CAQpB,SAAS8B,EAAeC,GAC7B,MAAMC,EAAiBD,EAAME,OAAOC,YAYpC,OAVKC,MAAMC,OAAOJ,MAAkB/B,EAAamC,OAAOJ,IACjC,MAAnBA,IACF/B,EAAaE,IAAgBJ,EAAaA,EAAaI,EAAc,GAEhD,MAAnB6B,IACF/B,EAA6B,IAAhBE,EAAoB,EAAIA,EAAc,GAE9B,SAAnB6B,IAA2B/B,EAAaE,GAAeD,EAAW,IAC/C,SAAnB8B,IAA2B/B,EAAaE,GAAeD,EAAW,IACtEC,EAAcF,EACPE,C,CAgFTkC,OAAOC,iBAAiB,UAAU,KAChC,MAAMC,EAAUF,OAAOG,WAAW,sBAAsBC,QACxDvC,EAAWqC,EAAU,EAAI,EACzBnC,EAAiBD,EAAaJ,EAAYC,EAAe,I,wDC7H3D0C,EAAA7C,EAAA,SAEA,MAAM8C,EAAWC,SAASC,cAAc,aAClCC,EAAQF,SAASC,cAAc,UAIrCF,EAASL,iBAAiB,SAiB1B,SAAuBS,GACrBA,EAAIC,iBACJL,EAASM,UAAUC,OAAO,S,IAlB5B,WACER,EAAAS,WAAWC,OAAOC,QAAQ,CAAEC,GAAI,MAAOC,KAAM,QAC7C,MAAMC,EAAQd,EAAAS,WAAWC,OACtBK,KACC,CAACC,EAASC,IACR,0BAA0BA,EAAQ,UAAUD,EAAQJ,iCAClCI,EAAQH,wBAG7BK,KAAK,IAERd,EAAMlB,mBAAmB,YAAa4B,E,CAGxCK,G,aFRO,MAAMC,EAAqB,IAAI,EAAAC,EAAAC,cAAa,oBAC7CC,EAAc,IAAI,EAAAC,EAAAC,SAAY,CAClCC,SAAU,aAGCC,EAAczB,SAASC,cAAc,iBAC5CyB,EAAgB1B,SAASC,cAAc,eACvC0B,EAAS3B,SAASC,cAAc,iBAChC2B,EAAa5B,SAASC,cAAc,gBACpC4B,EAAe7B,SAASC,cAAc,eAO5C,IAAI6B,EACAC,EACAC,EAPJN,EAAchC,iBAAiB,SAwG/BuC,eAAuC9C,GACrC,GAA8B,WAA1BA,EAAME,OAAO6C,SAAuB,OACxCb,EAAYc,OACZ,MAAMC,EAAalD,EAAeC,GAClC,GAAIiD,IAAeC,EAAa,OAChCA,EAAcD,QACRE,IACNjB,EAAYkB,M,IA9GdZ,EAAOjC,iBAAiB,UAsExBuC,eAA0B9C,GACxBqD,EAAiBrD,EAAMsD,cAAcC,QACrCC,GAAiB,EACjBC,GAAkB,EAClBP,EAAc,QAERC,G,IA3ERpC,EAAMR,iBAAiB,SA4DvBuC,eAA4B9B,GAC1BA,EAAIC,iBACJuC,GAAiB,EACjBC,GAAkB,EAClBC,EAAU1C,EAAId,OAAOqB,GACrB2B,EAAc,QACRC,G,IAjERV,EAAWlC,iBAAiB,UA6E5BuC,eAA4B9B,GAI1B,GAHAA,EAAIC,iBACJ0C,EAAc3C,EAAId,OAAO0D,SAASC,YAAYC,MAAMC,OACpDtB,EAAWuB,SACNL,EAEH,YADAM,IAGFR,GAAkB,EAClBD,GAAiB,EACjBU,EAAWhB,EACXA,EAAc,QACRC,G,IApFR,IAIIO,EAJAC,EAAc,GACdO,EAAW,EACXhB,EAAc,EACdiB,EAAa,EAEbd,GAAiB,EACjBG,GAAiB,EACjBC,GAAkB,EAgBtBX,eAAeK,IACbjB,EAAYc,aAWdF,iBACE,GAAIW,EAAiB,CACnB,MAAMW,QAAuB,EAAAvG,EAAAwG,YAAWV,EAAaT,GACrD,IAAKkB,EAAeE,QAAQlF,OAI1B,OAHA8D,EAAcgB,EACdhC,EAAYkB,YACZa,IAGFtB,EAAmByB,C,MAEnBzB,EADSa,QACgB,EAAA3F,EAAA0G,oBAAmBb,EAASR,GAElCG,QACT,EAAAxF,EAAA2G,iBAAgBtB,SAChB,EAAArF,EAAA4G,cAAavB,E,CAzBnBwB,GACNP,EAAaX,EAAiB,IAAMb,EAAiBgC,YACrD9B,EAAmBF,EAAiB2B,QACpCvC,EAAmB6C,gBAAgB/B,IACnC,EAAAgC,EAAAC,gBAAejC,EAAkBP,GACjCjE,EAAiB6E,EAAaiB,EAAY5B,GAC1CL,EAAYkB,OACZ9C,OAAOyE,SAAS,EAAG,E,CAsDrB,SAASd,IACPvB,EAAasC,MAAMC,QAAU,IAI7BC,YAAW,KACTxC,EAAasC,MAAMC,QAAU,GAAG,GAC/B,I,CArFLvC,EAAasC,MAAMC,QAAU,IAI7BnC,iBACEZ,EAAYc,OACZL,QAAyB,EAAA9E,EAAAsH,cACzBvC,EAAgBD,EAAiBtB,OACjCW,EAAAoD,WAAWR,gBAAgBhC,SACrBO,KACN,EAAAkC,EAAAjD,WACA9B,OAAOyE,SAAS,EAAG,GACnB7C,EAAYkB,M,CAVdkC,G,iEGrCA,MAAMC,EAAU,CACdC,MAAO,QACPC,aAAc,OACdC,SAAU,gBACVC,SAAU,OACVC,SAAU,OACVC,QAAS,KAGXvD,EAAY/B,iBAAiB,SAgF7B,SAAqBP,GACnB,MAAM8F,EAAU9F,EAAME,OAAO6F,QAAQ,wBACrC,IAAKD,EAAS,OACdE,EAAS3F,OAAOyF,EAAQG,QAAQ1E,IAEhC2E,EAAiBnE,EAAmBoE,kBACpC,MAAMC,EAAOF,EAAeG,MAAKC,GAAQA,EAAK/E,KAAOyE,IAC/CO,GAAa,EAAA1B,EAAA2B,kBAAiBJ,EAAKK,WAvBzCC,EAAiB1E,EAAA2E,aAAaR,kBAC9BS,IAAcF,EAAetH,QACzBsH,EAAeL,MAAK1G,GAAQA,EAAK4B,IAAMyE,IAG3Ca,EAAe7E,EAAA8E,WAAWX,kBAC1BY,IAAYF,EAAazH,QACrByH,EAAaR,MAAK1G,GAAQA,EAAK4B,IAAMyE,KAmBzC,EAAAnB,EAAAmC,yBAAwBZ,EAAMG,EAAYK,EAAaG,E,IAzFpClG,SAASC,cAAc,qBAC/BP,iBAAiB,SAsBvB,SAAwBP,GAC7B,MAAM2B,EAAU3B,EAAME,OACtB+G,EAAcf,EAAegB,QAAOZ,GAAQA,EAAK/E,IAAMyE,KAGrDrE,EAAQT,UAAUiG,SAAS,sBAC3BxF,EAAQT,UAAUiG,SAAS,sBAEvBxF,EAAQT,UAAUiG,SAAS,qBACzBP,GACF5E,EAAA2E,aAAaS,sBAAsBH,EAAY,IAC/CjH,EAAME,OAAOC,YAAc,iBAC3BkH,EAAAC,OAAOC,QAAQ,0CAA2ChC,GAC1DqB,GAAc,IAEd5E,EAAA2E,aAAaa,oBAAoBP,GACjCjH,EAAME,OAAOC,YAAc,sBAC3BkH,EAAAC,OAAOC,QAAQ,yCAA0ChC,GACzDqB,GAAc,GAEPjF,EAAQT,UAAUiG,SAAS,qBAChCJ,GACF/E,EAAA8E,WAAWM,sBAAsBH,EAAY,IAC7CjH,EAAME,OAAOC,YAAc,eAC3BkH,EAAAC,OAAOC,QAAQ,kCAAmChC,GAClDwB,GAAY,IAEZ/E,EAAA8E,WAAWU,oBAAoBP,GAC/BjH,EAAME,OAAOC,YAAc,oBAC3BkH,EAAAC,OAAOC,QAAQ,oCAAqChC,GACpDwB,GAAY,I,IAlDpB,IAGIL,EACAG,EAEAX,EACAe,EACAjB,EARAY,GAAc,EACdG,GAAY,GAUhB,WACO/E,EAAA2E,aAAaR,mBAChBnE,EAAA2E,aAAa/B,kBAEV5C,EAAA8E,WAAWX,mBACdnE,EAAA8E,WAAWlC,iB,CANf6C,G","sources":["src/js/filmoteka.js","src/js/custom-pagination.js","src/js/genres-btn.js","src/js/locale-storage-helper.js"],"sourcesContent":["import {\n  fetchPopular,\n  fetchPopularDay,\n  fetchGenre,\n  fetchMoivesByGenre,\n  fetchQuery,\n} from './api-service';\nimport { updatePagination, getCurrentPage } from './custom-pagination';\nimport { markupTrending } from './markups';\nimport modalActions from './modal-servise';\nimport LoadSpinner from './spinner';\nimport { genresFilm, LocalStorage } from './local-storage';\nimport { items } from './genres-btn';\nimport modalActions from './modal-servise';\nexport const currentFilmsOnPage = new LocalStorage('currentFilmsList');\nconst loadSpinner = new LoadSpinner({\n  selector: '.loading',\n});\n\nexport const homeGallery = document.querySelector('.home-gallery');\nconst paginationRef = document.querySelector('.pagination');\nconst toggle = document.querySelector('#input-toggle');\nconst searchForm = document.querySelector('.search-form');\nconst errorMessage = document.querySelector('.error-text');\n\npaginationRef.addEventListener('click', onPaginationButtonClick);\ntoggle.addEventListener('change', onCheckBox);\nitems.addEventListener('click', onGanreClick);\nsearchForm.addEventListener('submit', onSearchForm);\n\nlet receivedFilmList;\nlet currentGenres;\nlet currentFilmsList;\nlet searchQuery = '';\nlet tempPage = 1;\nlet currentPage = 1;\nlet totalPages = 1;\nlet genreId;\nlet isTodayChecked = false;\nlet isGenreChoosen = false;\nlet isSearchChoosen = false;\nerrorMessage.style.opacity = '0';\n\ninitGallery();\n\nasync function initGallery() {\n  loadSpinner.show();\n  receivedFilmList = await fetchGenre();\n  currentGenres = receivedFilmList.genres;\n  genresFilm.setLocalStorage(currentGenres);\n  await updateGallery();\n  modalActions();\n  window.scrollTo(0, 0);\n  loadSpinner.hide();\n}\n\nasync function updateGallery() {\n  loadSpinner.show();\n  await chooseSearchQuery();\n  totalPages = isGenreChoosen ? 300 : receivedFilmList.total_pages;\n  currentFilmsList = receivedFilmList.results;\n  currentFilmsOnPage.setLocalStorage(currentFilmsList);\n  markupTrending(currentFilmsList, homeGallery);\n  updatePagination(currentPage, totalPages, paginationRef);\n  loadSpinner.hide();\n  window.scrollTo(0, 0);\n}\n\nasync function chooseSearchQuery() {\n  if (isSearchChoosen) {\n    const searchFilmList = await fetchQuery(searchQuery, currentPage);\n    if (!searchFilmList.results.length) {\n      currentPage = tempPage;\n      loadSpinner.hide();\n      warningMessage();\n      return;\n    }\n    receivedFilmList = searchFilmList;\n  } else if (isGenreChoosen) {\n    receivedFilmList = await fetchMoivesByGenre(genreId, currentPage);\n  } else {\n    receivedFilmList = isTodayChecked\n      ? await fetchPopularDay(currentPage)\n      : await fetchPopular(currentPage);\n  }\n}\n\nasync function onGanreClick(evt) {\n  evt.preventDefault();\n  isGenreChoosen = true;\n  isSearchChoosen = false;\n  genreId = evt.target.id;\n  currentPage = 1;\n  await updateGallery();\n}\n\nasync function onCheckBox(event) {\n  isTodayChecked = event.currentTarget.checked;\n  isGenreChoosen = false;\n  isSearchChoosen = false;\n  currentPage = 1;\n\n  await updateGallery();\n}\n\nasync function onSearchForm(evt) {\n  evt.preventDefault();\n  searchQuery = evt.target.elements.searchQuery.value.trim();\n  searchForm.reset();\n  if (!searchQuery) {\n    warningMessage();\n    return;\n  }\n  isSearchChoosen = true;\n  isGenreChoosen = false;\n  tempPage = currentPage;\n  currentPage = 1;\n  await updateGallery();\n}\nfunction warningMessage() {\n  errorMessage.style.opacity = '1';\n  timeoutRemoveErrorMessage();\n}\nfunction timeoutRemoveErrorMessage() {\n  setTimeout(() => {\n    errorMessage.style.opacity = '0';\n  }, 2000);\n}\n\nasync function onPaginationButtonClick(event) {\n  if (event.target.nodeName !== 'BUTTON') return;\n  loadSpinner.show();\n  const targetPage = getCurrentPage(event);\n  if (targetPage === currentPage) return;\n  currentPage = targetPage;\n  await updateGallery();\n  loadSpinner.hide();\n}\n","// https://jasonwatmore.com/post/2018/08/07/javascript-pure-pagination-logic-in-vanilla-js-typescript\n\nlet maxPages = 9; //maximum number of page navigation links to display\nlet output;\nlet currentPage = 1;\nlet totalPages;\nlet paginationElem;\n\nlet targetPage;\n\n/**\n * to export - marking up pagination line\n * @param {Number} page - the current active page\n * @param {Number} pages - the total number of pages\n * @param {DOM element} paginationRef - where to put pagination line\n */\nexport function updatePagination(page, pages, paginationRef) {\n  paginationElem = paginationRef;\n  currentPage = page;\n  totalPages = pages;\n  output = paginate(currentPage, totalPages);\n  markupPagination(output, paginationElem);\n}\n\n/**\n *\n * @param {event} event click on button element\n * @returns currentPage\n */\nexport function getCurrentPage(event) {\n  const targetPageText = event.target.textContent;\n\n  if (!isNaN(Number(targetPageText))) targetPage = Number(targetPageText);\n  if (targetPageText === '>') {\n    targetPage = currentPage === totalPages ? totalPages : currentPage + 1;\n  }\n  if (targetPageText === '<') {\n    targetPage = currentPage === 1 ? 1 : currentPage - 1;\n  }\n  if (targetPageText === ' ...') targetPage = currentPage - (maxPages - 4);\n  if (targetPageText === '... ') targetPage = currentPage + (maxPages - 4);\n  currentPage = targetPage;\n  return currentPage;\n}\n\n/**\n *\n * @param {Number} currentPage - the current active page\n * @param {Number} totalPages - the total number of pages\n * @returns {Array} of text content for buttons in pagination line\n */\nfunction paginate(currentPage, totalPages) {\n  const output = [];\n  let startPage;\n  let endPage;\n  const offsetPages = Math.floor(maxPages / 2);\n\n  if (currentPage < 1) {\n    currentPage = 1;\n  } else if (currentPage > totalPages) {\n    currentPage = totalPages;\n  }\n\n  if (totalPages <= maxPages) {\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    if (currentPage <= offsetPages) {\n      startPage = 1;\n      endPage = maxPages;\n    } else if (currentPage + offsetPages >= totalPages) {\n      startPage = totalPages - offsetPages * 2;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - offsetPages;\n      endPage = currentPage + offsetPages;\n    }\n  }\n  for (let i = startPage; i <= endPage; i += 1) {\n    output.push(i);\n  }\n\n  if (maxPages >= 9) {\n    output.splice(0, 1, 1);\n    output.splice(output.length - 1, 1, totalPages);\n    if (currentPage - 1 > offsetPages && totalPages > maxPages) {\n      output.splice(1, 1, ' ...');\n    }\n    if (currentPage + 1 + offsetPages < totalPages && totalPages > maxPages)\n      output.splice(output.length - 2, 1, '... ');\n  }\n  return output;\n}\n\n/**\n * marking up pagination line\n * @param {Array} output - text content for buttons in pagination line output\n * @param {DOM element} paginationElem - where to put pagination line\n */\nfunction markupPagination(output, paginationElem) {\n  let markup = output.reduce((acc, item) => {\n    const pagiClass =\n      item === currentPage\n        ? 'class=\"pagination-button pagination-button-current\"'\n        : 'class=\"pagination-button\"';\n    return (acc += `<button type=\"button\" ${pagiClass}>${item}</button>`);\n  }, ``);\n  if (totalPages > maxPages) {\n    if (currentPage !== 1) {\n      markup =\n        `<button type=\"button\" class=\"pagination-button\">&lt;</button>` +\n        markup;\n    }\n    if (currentPage !== totalPages) {\n      markup += `<button type=\"button\" class=\"pagination-button\">&gt;</button>`;\n    }\n  }\n\n  paginationElem.innerHTML = '';\n  paginationElem.insertAdjacentHTML('beforeend', markup);\n}\n\nwindow.addEventListener('resize', () => {\n  const isMatch = window.matchMedia('(min-width: 768px)').matches;\n  maxPages = isMatch ? 9 : 5;\n  updatePagination(currentPage, totalPages, paginationElem);\n});\n","import { dataGenres } from './test';\n\nconst dropdown = document.querySelector('.dropdown');\nconst items = document.querySelector('.items');\n\nexport { items };\n\ndropdown.addEventListener('click', onButtonClick);\nfunction btnGenres() {\n  dataGenres.genres.unshift({ id: 'all', name: 'ALL' });\n  const liArr = dataGenres.genres\n    .map(\n      (element, index) =>\n        `<a href=\"#\" style=\"--i:${index + 1}\" id=\"${element.id}\">\n           <span></span>${element.name}\n         </a>`\n    )\n    .join('');\n\n  items.insertAdjacentHTML('beforeend', liArr);\n}\n\nbtnGenres();\n\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n  dropdown.classList.toggle('active');\n}\n","import { currentFilmsOnPage } from './filmoteka';\nimport { watchedFilms, queueFilms } from './local-storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { homeGallery } from './filmoteka';\nimport { getGenreByIdList, createMarkupModalWindow } from './markups';\n\nconst options = {\n  width: '280px',\n  borderRadius: '30px',\n  position: 'center-bottom',\n  distance: '25px',\n  fontSize: '18px',\n  timeout: 2000,\n};\n\nhomeGallery.addEventListener('click', onCardClick);\nconst filmModalRef = document.querySelector('.js-filmInfoModal');\nfilmModalRef.addEventListener('click', updateDataBase);\n\nlet isInWatched = false;\nlet isInQueue = false;\n\nlet filmsInWatched;\nlet filmsInQueue;\n\nlet filmCollection;\nlet currentFilm;\nlet idFilm;\n\ninitLocaleStorage();\nfunction initLocaleStorage() {\n  if (!watchedFilms.getLocalStorage()) {\n    watchedFilms.setLocalStorage();\n  }\n  if (!queueFilms.getLocalStorage()) {\n    queueFilms.setLocalStorage();\n  }\n}\n\nexport function updateDataBase(event) {\n  const element = event.target;\n  currentFilm = filmCollection.filter(film => film.id == idFilm);\n\n  if (\n    element.classList.contains('js-add-to-watched') ||\n    element.classList.contains('js-add-to-queue')\n  ) {\n    if (element.classList.contains('js-add-to-watched')) {\n      if (isInWatched) {\n        watchedFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to watched';\n        Notify.success('The movie is deleted from to my library', options);\n        isInWatched = false;\n      } else {\n        watchedFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from watched';\n        Notify.success('The movie has been added to my library', options);\n        isInWatched = true;\n      }\n    } else if (element.classList.contains('js-add-to-queue')) {\n      if (isInQueue) {\n        queueFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to queue';\n        Notify.success('The movie is deleted from queue', options);\n        isInQueue = false;\n      } else {\n        queueFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from queue';\n        Notify.success('The movie has been added to queue', options);\n        isInQueue = true;\n      }\n    }\n  }\n}\n\n/**\n * Checks if library (watched or queue) includes choosen film\n */\nfunction checkIfInLibrary() {\n  filmsInWatched = watchedFilms.getLocalStorage();\n  isInWatched = filmsInWatched.length\n    ? filmsInWatched.find(item => item.id == idFilm)\n    : false;\n\n  filmsInQueue = queueFilms.getLocalStorage();\n  isInQueue = filmsInQueue.length\n    ? filmsInQueue.find(item => item.id == idFilm)\n    : false;\n}\n\n/**\n * Prepares data and calls to markup modal window\n * @param {DOM Element} onClick event\n * @returns nothing\n */\nfunction onCardClick(event) {\n  const filmBox = event.target.closest('.movies-images__item');\n  if (!filmBox) return;\n  idFilm = Number(filmBox.dataset.id);\n\n  filmCollection = currentFilmsOnPage.getLocalStorage();\n  const data = filmCollection.find(film => film.id === idFilm);\n  const filmGenres = getGenreByIdList(data.genre_ids);\n\n  checkIfInLibrary();\n  createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n}\n"],"names":["$7me8F","parcelRequire","$b7da7886b6ae1331$var$output","$b7da7886b6ae1331$var$totalPages","$b7da7886b6ae1331$var$paginationElem","$b7da7886b6ae1331$var$targetPage","$b7da7886b6ae1331$var$maxPages","$b7da7886b6ae1331$var$currentPage","$b7da7886b6ae1331$export$909ec5aabce1b1f7","page","pages","paginationRef","currentPage1","totalPages1","output1","startPage","endPage","offsetPages","Math","floor","i","push","splice","length","$b7da7886b6ae1331$var$paginate","output2","paginationElem1","markup","reduce","acc","item","innerHTML","insertAdjacentHTML","$b7da7886b6ae1331$var$markupPagination","$b7da7886b6ae1331$export$7945ba8eb1c827e6","event","targetPageText","target","textContent","isNaN","Number","window","addEventListener","isMatch","matchMedia","matches","$9AkgD","$e3f44edcaeb43caa$var$dropdown","document","querySelector","$e3f44edcaeb43caa$export$17a1664ed1fb5d6f","evt","preventDefault","classList","toggle","dataGenres","genres","unshift","id","name","liArr","map","element","index","join","$e3f44edcaeb43caa$var$btnGenres","$c848cac843f338cf$export$4bf8523ab657c1fa","$b5rV1","LocalStorage","$c848cac843f338cf$var$loadSpinner","$04jNI","default","selector","$c848cac843f338cf$export$61d936692c3f4b2e","$c848cac843f338cf$var$paginationRef","$c848cac843f338cf$var$toggle","$c848cac843f338cf$var$searchForm","$c848cac843f338cf$var$errorMessage","$c848cac843f338cf$var$receivedFilmList","$c848cac843f338cf$var$currentGenres","$c848cac843f338cf$var$currentFilmsList","async","nodeName","show","targetPage","$c848cac843f338cf$var$currentPage","$c848cac843f338cf$var$updateGallery","hide","$c848cac843f338cf$var$isTodayChecked","currentTarget","checked","$c848cac843f338cf$var$isGenreChoosen","$c848cac843f338cf$var$isSearchChoosen","$c848cac843f338cf$var$genreId","$c848cac843f338cf$var$searchQuery","elements","searchQuery","value","trim","reset","$c848cac843f338cf$var$warningMessage","$c848cac843f338cf$var$tempPage","$c848cac843f338cf$var$totalPages","searchFilmList","fetchQuery","results","fetchMoivesByGenre","fetchPopularDay","fetchPopular","$c848cac843f338cf$var$chooseSearchQuery","total_pages","setLocalStorage","$fA0uA","markupTrending","scrollTo","style","opacity","setTimeout","fetchGenre","genresFilm","$7TcCz","$c848cac843f338cf$var$initGallery","$1b0fce77a865df25$var$options","width","borderRadius","position","distance","fontSize","timeout","filmBox","closest","$1b0fce77a865df25$var$idFilm","dataset","$1b0fce77a865df25$var$filmCollection","getLocalStorage","data","find","film","filmGenres","getGenreByIdList","genre_ids","$1b0fce77a865df25$var$filmsInWatched","watchedFilms","$1b0fce77a865df25$var$isInWatched","$1b0fce77a865df25$var$filmsInQueue","queueFilms","$1b0fce77a865df25$var$isInQueue","createMarkupModalWindow","$1b0fce77a865df25$var$currentFilm","filter","contains","deleteFilmFromStorage","$iQIUW","Notify","success","addFilmtoStorage","$1b0fce77a865df25$var$initLocaleStorage"],"version":3,"file":"index.00291af3.js.map"}