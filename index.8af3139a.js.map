{"mappings":"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","sources":["src/js/filmoteka.js","src/js/genres-btn.js","src/js/locale-storage-helper.js"],"sourcesContent":["import {\n  fetchPopular,\n  fetchPopularDay,\n  fetchGenre,\n  fetchMoivesByGenre,\n  fetchQuery,\n} from './api-service';\nimport { updatePagination, getCurrentPage } from './custom-pagination';\nimport {\n  markupTrending,\n  getGenreByIdList,\n  createMarkupModalWindow,\n} from './markups';\nimport modalActions from './modal-servise';\nimport LoadSpinner from './spinner';\nimport { genresFilm, LocalStorage } from './local-storage';\nimport { items } from './genres-btn';\nimport modalActions from './modal-servise';\nmodalActions();\n// export const popularFilms = new LocalStorage('currentFilmsList');\nexport const currentFilmsOnPage = new LocalStorage('currentFilmsList');\nconst loadSpinner = new LoadSpinner({\n  selector: '.loading',\n});\n\nexport const homeGallery = document.querySelector('.home-gallery');\nconst paginationRef = document.querySelector('.pagination');\nconst toggle = document.querySelector('#input-toggle');\nconst searchForm = document.querySelector('.search-form');\nconst errorMessage = document.querySelector('.error-text');\n\n// homeGallery.addEventListener('click', onCardClick);\npaginationRef.addEventListener('click', onPaginationButtonClick);\ntoggle.addEventListener('change', onCheckBox);\nitems.addEventListener('click', onGanreClick);\nsearchForm.addEventListener('submit', onSearchForm);\n\nlet receivedFilmList;\nlet currentGenres;\nlet currentFilmsList;\nlet searchQuery = '';\nlet tempPage = 1;\nlet currentPage = 1;\nlet totalPages = 1;\nlet genreId;\nlet isTodayChecked = false;\nlet isGenreChoosen = false;\nlet isSearchChoosen = false;\nerrorMessage.style.opacity = '0';\n\n// // ======================================================\n// const isInWatched = false;\n// const isInQueue = false;\n// //  =======================================================\n\ninitGallery();\nwindow.scrollTo(0, 0);\n\nasync function initGallery() {\n  loadSpinner.show();\n  receivedFilmList = await fetchGenre();\n  currentGenres = receivedFilmList.genres;\n  genresFilm.setLocalStorage(currentGenres);\n  await updateGallery();\n  loadSpinner.hide();\n}\n\nasync function updateGallery() {\n  loadSpinner.show();\n  await chooseSearchQuery();\n  // ======================================================\n  totalPages = isGenreChoosen ? 300 : receivedFilmList.total_pages;\n  // ======================================================\n  currentFilmsList = receivedFilmList.results;\n  // popularFilms.setLocalStorage(currentFilmsList);\n  currentFilmsOnPage.setLocalStorage(currentFilmsList);\n\n  // ======================================================\n\n  // const isInWatched = checkIfInLibrary('watched');\n  // const isInQueue = checkIfInLibrary('queue');\n\n  // markupTrending(currentFilmsList, homeGallery, isInWatched, isInQueue);\n\n  // ======================================================\n\n  markupTrending(currentFilmsList, homeGallery);\n  updatePagination(currentPage, totalPages, paginationRef);\n  loadSpinner.hide();\n  window.scrollTo(0, 0);\n}\n\nasync function chooseSearchQuery() {\n  if (isSearchChoosen) {\n    const searchFilmList = await fetchQuery(searchQuery, currentPage);\n    if (!searchFilmList.results.length) {\n      currentPage = tempPage;\n      loadSpinner.hide();\n      warningMessage();\n      return;\n    }\n    receivedFilmList = searchFilmList;\n  } else if (isGenreChoosen) {\n    receivedFilmList = await fetchMoivesByGenre(genreId, currentPage);\n  } else {\n    receivedFilmList = isTodayChecked\n      ? await fetchPopularDay(currentPage)\n      : await fetchPopular(currentPage);\n  }\n}\n\n// function onCardClick(event) {\n//   const filmBox = event.target.closest('.movies-images__item');\n//   if (!filmBox) return;\n//   const filmBoxId = Number(filmBox.dataset.id);\n//   const data = currentFilmsList.find(film => film.id === filmBoxId);\n//   const filmGenres = getGenreByIdList(data.genre_ids);\n//   createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n// }\n\n// ===== button genres ===============================\nasync function onGanreClick(evt) {\n  evt.preventDefault();\n  isGenreChoosen = true;\n  isSearchChoosen = false;\n  genreId = evt.target.id;\n  currentPage = 1;\n  await updateGallery();\n}\n\n// ===== checkBox week/today ========================\nasync function onCheckBox(event) {\n  isTodayChecked = event.currentTarget.checked;\n  isGenreChoosen = false;\n  isSearchChoosen = false;\n  currentPage = 1;\n\n  await updateGallery();\n}\n\n// ===== search input =================================\nasync function onSearchForm(evt) {\n  evt.preventDefault();\n  searchQuery = evt.target.elements.searchQuery.value.trim();\n  searchForm.reset();\n  if (!searchQuery) {\n    warningMessage();\n    return;\n  }\n  isSearchChoosen = true;\n  isGenreChoosen = false;\n  tempPage = currentPage;\n  currentPage = 1;\n  await updateGallery();\n}\nfunction warningMessage() {\n  errorMessage.style.opacity = '1';\n  timeoutRemoveErrorMessage();\n}\nfunction timeoutRemoveErrorMessage() {\n  setTimeout(() => {\n    errorMessage.style.opacity = '0';\n  }, 2000);\n}\n\n// ===== pagination =====================================\nasync function onPaginationButtonClick(event) {\n  if (event.target.nodeName !== 'BUTTON') return;\n  loadSpinner.show();\n  const targetPage = getCurrentPage(event);\n  if (targetPage === currentPage) return;\n  currentPage = targetPage;\n  await updateGallery();\n  // window.scrollTo(0, 0);\n  loadSpinner.hide();\n}\n","import { dataGenres } from './test';\n// import { fetchMoivesByGenre } from './api-service';\n// import { markupTrending } from './markups';\n\nconst dropdown = document.querySelector('.dropdown');\nconst items = document.querySelector('.items');\n// const homeGallery = document.querySelector('.home-gallery');\n\n// =====================================\nexport { items };\n// =====================================\ndropdown.addEventListener('click', onButtonClick);\nfunction btnGenres() {\n  dataGenres.genres.unshift({ id: 'all', name: 'ALL' });\n  const liArr = dataGenres.genres\n    .map(\n      (element, index) =>\n        `<a href=\"#\" style=\"--i:${index + 1}\" id=\"${element.id}\">\n           <span></span>${element.name}\n         </a>`\n    )\n    .join('');\n\n  items.insertAdjacentHTML('beforeend', liArr);\n}\n\n// items.addEventListener('click', onGanreClick);\nbtnGenres();\n\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n  dropdown.classList.toggle('active');\n}\n\n// async function onGanreClick(evt) {\n//   evt.preventDefault();\n\n//   const arrMovies = await fetchMoivesByGenre(evt.target.id, 1);\n//   markupTrending(arrMovies.results, homeGallery);\n// }\n","// currentFilmsOnPage = class LocalStorage instance key currentFilmsList\nimport { currentFilmsOnPage } from './filmoteka';\nimport { watchedFilms, queueFilms } from './local-storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { homeGallery } from './filmoteka';\nimport { getGenreByIdList, createMarkupModalWindow } from './markups';\n\n//options for notiflix\nconst options = {\n  width: '280px',\n  borderRadius: '30px',\n  position: 'center-bottom',\n  distance: '25px',\n  fontSize: '18px',\n  timeout: 2000,\n};\n//  =======================================================\n\nhomeGallery.addEventListener('click', onCardClick);\nconst filmModalRef = document.querySelector('.js-filmInfoModal');\nfilmModalRef.addEventListener('click', updateDataBase);\n\n// ====================================================\n\nlet isInWatched = false;\nlet isInQueue = false;\n\nlet filmsInWatched;\nlet filmsInQueue;\n\nlet filmCollection;\nlet currentFilm;\nlet idFilm;\n\ninitLocaleStorage();\nfunction initLocaleStorage() {\n  if (!watchedFilms.getLocalStorage()) {\n    watchedFilms.setLocalStorage();\n  }\n  if (!queueFilms.getLocalStorage()) {\n    queueFilms.setLocalStorage();\n  }\n}\n\n// ======================================================\nexport function updateDataBase(event) {\n  const element = event.target;\n  currentFilm = filmCollection.filter(film => film.id == idFilm);\n\n  if (\n    element.classList.contains('js-add-to-watched') ||\n    element.classList.contains('js-add-to-queue')\n  ) {\n    if (element.classList.contains('js-add-to-watched')) {\n      if (isInWatched) {\n        watchedFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to watched';\n        Notify.success('The movie is deleted from to my library', options);\n        isInWatched = false;\n      } else {\n        watchedFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from watched';\n        Notify.success('The movie has been added to my library', options);\n        isInWatched = true;\n      }\n    } else if (element.classList.contains('js-add-to-queue')) {\n      if (isInQueue) {\n        queueFilms.deleteFilmFromStorage(currentFilm[0]);\n        event.target.textContent = 'add to queue';\n        Notify.success('The movie is deleted from queue', options);\n        isInQueue = false;\n      } else {\n        queueFilms.addFilmtoStorage(...currentFilm);\n        event.target.textContent = 'remove from queue';\n        Notify.success('The movie has been added to queue', options);\n        isInQueue = true;\n      }\n    }\n  }\n}\n\n/**\n * Checks if library (watched or queue) includes choosen film\n */\nfunction checkIfInLibrary() {\n  filmsInWatched = watchedFilms.getLocalStorage();\n  isInWatched = filmsInWatched.length\n    ? filmsInWatched.find(item => item.id == idFilm)\n    : false;\n\n  filmsInQueue = queueFilms.getLocalStorage();\n  isInQueue = filmsInQueue.length\n    ? filmsInQueue.find(item => item.id == idFilm)\n    : false;\n}\n\n/**\n * Prepares data and calls to markup modal window\n * @param {DOM Element} onClick event\n * @returns nothing\n */\nfunction onCardClick(event) {\n  const filmBox = event.target.closest('.movies-images__item');\n  if (!filmBox) return;\n  idFilm = Number(filmBox.dataset.id);\n\n  filmCollection = currentFilmsOnPage.getLocalStorage();\n  const data = filmCollection.find(film => film.id === idFilm);\n  const filmGenres = getGenreByIdList(data.genre_ids);\n\n  checkIfInLibrary();\n  createMarkupModalWindow(data, filmGenres, isInWatched, isInQueue);\n}\n"],"names":["$bpxeT","parcelRequire","$8FeKp","$bee214a113ebdbaf$var$dropdown","document","querySelector","$bee214a113ebdbaf$export$17a1664ed1fb5d6f","addEventListener","evt","preventDefault","classList","toggle","dataGenres","genres","unshift","id","name","liArr","map","element","index","concat","join","insertAdjacentHTML","$bee214a113ebdbaf$var$btnGenres","default","$0d1473df3547cfcd$var$receivedFilmList","$0d1473df3547cfcd$var$currentGenres","$0d1473df3547cfcd$var$currentFilmsList","$0d1473df3547cfcd$export$4bf8523ab657c1fa","$4LMMA","LocalStorage","$0d1473df3547cfcd$var$loadSpinner","$j1lrD","selector","$0d1473df3547cfcd$export$61d936692c3f4b2e","$0d1473df3547cfcd$var$paginationRef","$0d1473df3547cfcd$var$toggle","$0d1473df3547cfcd$var$searchForm","$0d1473df3547cfcd$var$errorMessage","event","$0d1473df3547cfcd$var$_onPaginationButtonClick","apply","this","arguments","$0d1473df3547cfcd$var$_onCheckBox","$0d1473df3547cfcd$var$_onGanreClick","$0d1473df3547cfcd$var$_onSearchForm","$0d1473df3547cfcd$var$genreId","$0d1473df3547cfcd$var$searchQuery","$0d1473df3547cfcd$var$tempPage","$0d1473df3547cfcd$var$currentPage","$0d1473df3547cfcd$var$totalPages","$0d1473df3547cfcd$var$isTodayChecked","$0d1473df3547cfcd$var$isGenreChoosen","$0d1473df3547cfcd$var$isSearchChoosen","$0d1473df3547cfcd$var$_initGallery","$parcel$interopDefault","$2TvXO","mark","_callee","show","$1h2Gi","fetchGenre","_ctx","sent","genresFilm","setLocalStorage","$0d1473df3547cfcd$var$updateGallery","hide","$0d1473df3547cfcd$var$_updateGallery","$0d1473df3547cfcd$var$chooseSearchQuery","total_pages","results","$LW3sO","markupTrending","$dAKN3","updatePagination","window","scrollTo","$0d1473df3547cfcd$var$_chooseSearchQuery","searchFilmList","fetchQuery","length","$0d1473df3547cfcd$var$warningMessage","fetchMoivesByGenre","fetchPopularDay","fetchPopular","t0","target","currentTarget","checked","elements","searchQuery","value","trim","reset","style","opacity","setTimeout","targetPage","nodeName","getCurrentPage","$0d1473df3547cfcd$var$initGallery","$8nrFW","$c583d2193f059fcd$var$options","width","borderRadius","position","distance","fontSize","timeout","filmBox","closest","$c583d2193f059fcd$var$idFilm","Number","dataset","data","$c583d2193f059fcd$var$filmCollection","getLocalStorage","find","film","filmGenres","getGenreByIdList","genre_ids","$c583d2193f059fcd$var$filmsInWatched","watchedFilms","$c583d2193f059fcd$var$isInWatched","item","$c583d2193f059fcd$var$filmsInQueue","queueFilms","$c583d2193f059fcd$var$isInQueue","createMarkupModalWindow","$c583d2193f059fcd$var$currentFilm","filter","contains","_watchedFilms","deleteFilmFromStorage","textContent","$h6c0i","Notify","success","addFilmtoStorage","_queueFilms","$c583d2193f059fcd$var$initLocaleStorage"],"version":3,"file":"index.8af3139a.js.map"}